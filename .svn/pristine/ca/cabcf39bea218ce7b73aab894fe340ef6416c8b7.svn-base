<template>
    <div :class= "{'title': this.nodeData.NODE_TYPE == 2}">

      <div v-if='nodeData.NODE_TYPE == 2' class='title node-item'>{{this.nodeData.NODE_NAME}}</div><!--标题-->
      <div v-if='nodeData.INPUT_MODE === 0' class='node-item'>{{nodeData.NODE_NAME}}</div><!--无 文本类型-->
      <div class='node-item item1' v-if='nodeData.INPUT_MODE == 1'>
        <label class='marg5'>{{nodeData.NODE_NAME}}</label>
        <el-input placeholder='我是单行文本' readonly>
          <span
            class="el-input__icon"
            slot="suffix">
            {{nodeData.NODE_UNIT}}
          </span>
        </el-input>
      </div>
      <div class='node-item item2' v-if='nodeData.INPUT_MODE == 2'><!--多行文本-->
        <label>{{nodeData.NODE_NAME}}</label>
        <el-input type="textarea" placeholder="请输入" readonly></el-input>
      </div>
      <div class="node-item item3" v-if='nodeData.INPUT_MODE == 3'><!--单选-->
        <label class='marg5'>{{nodeData.NODE_NAME}}</label>
        <el-radio-group v-model="radio" disabled>
          <el-radio v-for="(item,index) of radios" :label="index + 1" :key='index' disabled>{{item.title}}</el-radio>
        </el-radio-group>
      </div>
      <div class="node-item item4" v-if='nodeData.INPUT_MODE == 4'>
        <label class='marg5'>{{nodeData.NODE_NAME}}</label>
        <el-checkbox-group v-model="checkbox">
          <el-checkbox v-for="(item,index) of radios" :label="item.label" :key='index' readonly>{{item.title}}</el-checkbox>
        </el-checkbox-group>
      </div>
      <div class="node-item item5" v-if='this.nodeData.INPUT_MODE == 5'>
        <label class='marg5'>{{nodeData.NODE_NAME}}</label>
        <el-select v-model="select" placeholder="请选择" readonly>
          <el-option
            readonly
            v-for="item in radios"
            :key="item.title"
            :label="item.title"
            :value="item.label">
            <span style="float: left">{{ item.title }}</span>
            <span style="float: right; color: #8492a6; font-size: 13px">{{ nodeData.NODE_UNIT }}</span>
          </el-option>
        </el-select>
      </div>
      <div class="node-item item5" v-if='this.nodeData.INPUT_MODE == 6'>
        <label class='marg5'>{{nodeData.NODE_NAME}}</label>
        <el-autocomplete
          readonly
          class="inline-input"
          v-model="state1"
          :fetch-suggestions="querySearch"
          placeholder="请输入内容"
          @select="handleSelect"
        ></el-autocomplete>
      </div>
      <div class="node-item item5" v-if='this.nodeData.INPUT_MODE == 7'>
        <label class='marg5'>{{nodeData.NODE_NAME}}</label>
        <el-radio-group v-model="radio">
          <el-radio v-for="(item,index) of radios" :label="item.label" :key='index' disabled>
            <template>
              <el-input v-model='item.title' v-if='item.custom' style="width: 50%;" disabled></el-input>
              <span v-if='item.custom == undefined'>{{item.title}}</span>
            </template>
          </el-radio>
        </el-radio-group>
      </div>
      <div v-if='rander' style="display: flex;flex-wrap: wrap;">
        <Node v-for='(child,index) of nodeData.CHILDS' :nodeData='child' :key=index :class='{"br":child.IS_NEWLINE =="1"}'></Node>
      </div>
    </div>

</template>

<script>
  import Node from './node'
  export default {
    data(){
      return{
        rander : false,
        INPUT_MODE : '',
        maxlength : '',
        radio : '',
        radios : [],
        checkbox : [],
        select : '',
        unit : '',
        restaurants : [],
        state1 : '',
      }
    },

    name: 'Node',

    components : { Node },

    props : ['nodeData'],

    methods : {
      querySearch(queryString, cb) {
        var restaurants = this.restaurants;
        var results = queryString ? restaurants.filter(this.createFilter(queryString)) : restaurants;
        // 调用 callback 返回建议列表的数据
        cb(results);
      },
      createFilter(queryString) {
        return (restaurant) => {
          return (restaurant.value.toLowerCase().indexOf(queryString.toLowerCase()) === 0);
        };
      },
      handleSelect(item) {
        console.log(item);
      }
    },

    created(){
        if(this.nodeData.CHILDS){
          this.rander = true
        }
        this.unit = this.nodeData.NODE_UNIT ? this.nodeData.NODE_UNIT : ''
        if(this.nodeData.OPTIONS){
          console.log(this.nodeData);
          var arr = this.nodeData.OPTIONS.split('\n')
          console.log('arr')
          console.log(arr)
          arr.forEach( item => {

              this.checkbox.push(item.split('|')[1])

              if(item.split('||').length == 2){
                this.radios.push({ title : item.split('||')[0] + this.unit , label : item.split('||')[1] , custom : true })
              }else{
                this.radios.push({ title : item.split('|')[0] + this.unit , label : item.split('|')[1] })
              }
              //可填可下拉
              this.restaurants.push({"value":item.split('|')[1]})
          })
          console.log(this.checkbox);
        }
    }
  }
</script>

<style scoped lang="stylus">
    .node-item
      display block
      margin-top 10px
      line-height 40px
      margin-right 10px
      .marg5
        margin-right 5px
    .item1 >>> .el-input__inner
      width 310px
    .item2 >>> .el-textarea__inner
      width 310px
      resize none
      background-color #F9F9FB
    .item1
      .el-input
        width 310px
    .br
      width 100%
    .title
      width 100%
      line-height 40px
</style>
