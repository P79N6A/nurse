<template>
    <div class='out-main'>
      <div class='top-menu'>
        <span>请输入表单名称</span>
        <el-input placeholder='必填' v-model='title'></el-input>
        <el-button type='primary' @click='save'>保存</el-button>
      </div>
      <el-table :data='LIST'>
        <el-table-column  label="序号" width="80">
          <template slot-scope="scope">
            {{scope.$index + 1}}
          </template>
        </el-table-column>
        <el-table-column  label="项目名称" width="180">
          <template slot-scope="scope">
            <el-select v-model='scope.row.CODE' @change='signChange' @focus='focu(scope.$index)'	filterable>
              <el-option :label="item.NAME" :value="item.CODE" v-for='item of signList' :key='item.ID'></el-option>
            </el-select>
          </template>
        </el-table-column>
        <el-table-column  label="一天几次" width="180">
          <template slot-scope="scope">
            <el-input v-model='scope.row.NUMBER_OF_TIMES' :readonly='scope.row.NUMBER_OF_TIMES_REVISABILITY == 1'></el-input>
          </template>
        </el-table-column>
        <el-table-column  label="操作" >
          <template slot-scope="scope">
            <el-button type='text' @click='deleteRow(scope.$index)'>删除</el-button>
          </template>
        </el-table-column>
      </el-table>
      <div class='add'>
        <el-button type='text' @click='add'>新增</el-button>
      </div>

      <el-dialog :visible.sync="popshow" title='选择体征项' width='454px'>
        <div class='advice'>
          <el-checkbox-group v-model="LIST[thisRow].subList" v-if='thisRow !== "" && LIST[thisRow] && LIST[thisRow].SUB'>
            <el-checkbox :label="item.CODE" v-for='item of LIST[thisRow].SUB' :key='item.CODE'>{{item.NAME}}</el-checkbox>
          </el-checkbox-group>
        </div>
        <div slot="footer" class="dialog-footer">
          <el-button type="primary" @click="popshow = false" style='padding:12px 32px!important;'>确 定</el-button>
        </div>
      </el-dialog>

    </div>
</template>

<script>
  import signBuildRecord from '@/pages/workstation/component/signBuildRecord'
  import { _debounce } from '@/global'
    export default {
        name : "customSignItem",

        props:['signList'],

        components:{ signBuildRecord },

        data(){
          return{
            title : '',
            LIST : [],
            thisRow : '',
            popshow:false,
          }
        },

        methods:{
          add(){
            this.LIST.push({ CODE : '' , NUMBER_OF_TIMES : '', NUMBER_OF_TIMES_REVISABILITY : '' , SUB : [] , subList:[] })
          },
          signChange(code){
            this.signList.forEach(item=>{
              if(code == item.CODE){
                console.log(item)
                this.LIST[this.thisRow].NUMBER_OF_TIMES = item.NUMBER_OF_TIMES
                this.LIST[this.thisRow].NUMBER_OF_TIMES_REVISABILITY = item.NUMBER_OF_TIMES_REVISABILITY

                if(item.SUB.length > 0){
                  this.LIST[this.thisRow].subList = []
                  this.LIST[this.thisRow].SUB = [...item.SUB]
                  this.popshow = true
                }
              }
            })
            console.log(this.LIST)
          },
          focu(index){
            console.log(index)
            this.thisRow = index
          },
          deleteRow(index){

          },
          save : _debounce(function () {
            if(this.title == ''){
              this.$message({ type: 'error', message: '表单名称必填!'})
              return
            }
            if(this.LIST.length ==0){
              this.$message({ type: 'error', message: '项目不能为空!'})
              return
            }
            let arr = []
            let flag = true
            this.LIST.forEach(item=>{
              if(item.CODE == ''){
              this.$message({ type: 'error', message: '项目名称不能为空!'})
              flag = false
            }
              var obj = { code : item.CODE , num : item.NUMBER_OF_TIMES }
              if(item.subList.length > 0){
                obj.sub = item.subList
              }
              arr.push(obj)
            })
            if(flag == false) return

            this.post('datacenter/vs-nurse-template',{ title : this.title , data : JSON.stringify(arr) },res=>{
              console.log(res)
              if(res.status < 400){
                this.$message({ type: 'success', message: '新增成功'})
                this.$parent.$parent.$parent.getTabData()
                this.$parent.$parent.$parent.LIST = []
              }
            })
          })
        },
    }
</script>

<style lang='stylus' scoped>
  .top-menu
    margin 15px 0
    .el-input
      width 310px
      margin-left 10px
      &>>>.el-input__inner
        width 310px
        background-color #F9F9FB
    .el-button
      padding 12px 32px!important
  .add
    background-color #F9F9FB
    height 40px
    text-align center
    .el-button
      line-height 40px
  .el-table
    &:before
      display none
  .advice
    width: 92%
    padding 10px 10px
    border 1px solid #ddd
    border-radius 5px
    .el-checkbox
      display block
      padding: 0 20px;
      background: #F9F9FB;
      line-height: 44px;
      color: #2B3A50;
      border: 5px solid #fff;
      -webkit-box-sizing: border-box;
      box-sizing: border-box;
      position relative
      &>>>.el-checkbox__input
        position absolute
        top 15px
      &>>>.el-checkbox__label
        padding-left 22px
        overflow-wrap break-word
        word-break normal
    .el-checkbox+.el-checkbox
      margin-left 0
</style>
